* Starter kit bits to load 
#+begin_src emacs-lisp
  (starter-kit-load "python") 
  (starter-kit-load "org")
  ;;(starter-kit-load "haskell")
 #+end_src
* Turn on "smart quotes" for org
#+begin_src emacs-lisp
(setq org-export-with-smart-quotes t)
#+end_src

#+RESULTS:
: t


* John Kitchin's scimax 

This code just sets up paths to find scimax bits
#+BEGIN_SRC emacs-lisp
(setq scimax-dir (expand-file-name "~/.emacs.d/scimax/"))
(add-to-list 'load-path (expand-file-name "~/.emacs.d/scimax"))
(add-to-list 'load-path (expand-file-name "~/.emacs.d/scimax/ox-ipynb"))
#+END_SRC

#+BEGIN_SRC emacs-lisp :tangle yes
(use-package lispy)
(require 'lispy)
(use-package org-ref)
(require 's)
(require 'scimax-org)
;(require 'scimax)
;(require 'ox-ipynb)
#+END_SRC

* LaTeX Org-Export Setup
Following code-block sets markers used by async export.
#+BEGIN_SRC emacs-lisp :tangle yes
;; * START_ASYNC_INIT
#+END_SRC

** New exporter for latex, etc.:
#+begin_src emacs-lisp 
(require 'ox-beamer)
(require 'ox-html)
(require 'ox-ascii)
(require 'ox-odt)
(require 'ox-ipynb)
(org-defkey org-mode-map (kbd "C-c C-e") 'org-export-dispatch)
(setq org-export-backends (quote (ascii beamer html icalendar latex ipynb md koma-letter)))
(setq org-export-initial-scope (quote subtree))
(setq org-export-with-email nil)
(setq org-export-with-smart-quotes t)
(setq org-latex-title-command "\\maketitle")
#+end_src

** Default LaTeX classes
 #+BEGIN_SRC emacs-lisp :tangle yes
 (setq org-latex-classes
    (quote
     (("beamer" "\\documentclass[presentation]{beamer}
       [DEFAULT-PACKAGES]
       [PACKAGES]
       [EXTRA]"
       ("\\section{%s}" . "\\section*{%s}")
       ("\\subsection{%s}" . "\\subsection*{%s}")
       ("\\subsubsection{%s}" . "\\subsubsection*{%s}"))
      ("article" "\\RequirePackage{rotating}\n\\documentclass[12pt]{amsart}"
       ("\\section{%s}" . "\\section*{%s}")
       ("\\subsection{%s}" . "\\subsection*{%s}")
       ("\\subsubsection{%s}" . "\\subsubsection*{%s}")
       ("\\paragraph{%s}" . "\\paragraph*{%s}")
       ("\\subparagraph{%s}" . "\\subparagraph*{%s}"))
      ("report" "\\documentclass[11pt]{report}"
       ("\\part{%s}" . "\\part*{%s}")
       ("\\chapter{%s}" . "\\chapter*{%s}")
       ("\\section{%s}" . "\\section*{%s}")
       ("\\subsection{%s}" . "\\subsection*{%s}")
       ("\\subsubsection{%s}" . "\\subsubsection*{%s}"))
      ("book" "\\documentclass[11pt]{book}"
       ("\\part{%s}" . "\\part*{%s}")
       ("\\chapter{%s}" . "\\chapter*{%s}")
       ("\\section{%s}" . "\\section*{%s}")
       ("\\subsection{%s}" . "\\subsection*{%s}")
       ("\\subsubsection{%s}" . "\\subsubsection*{%s}")))))
 #+END_SRC

 #+BEGIN_SRC emacs-lisp :tangle yes
 (setq org-latex-default-packages-alist
    (quote
     (("AUTO" "inputenc" t)
      ;;("T1" "fontenc" t) ; Commented out to deal with https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=810617.  Restore after libcairo2 updated.
      ("" "lmodern" t)
      ;;("" "fixltx2e" nil) ; Not required for LaTeX releases post 2015.
      ("" "graphicx" t)
      ("" "longtable" nil)
      ("" "float" nil)
      ("" "wrapfig" nil)
      ("" "rotating" nil)
      ("normalem" "ulem" t)
      ("" "textcomp" t)
      ("" "marvosym" t)
      ("" "wasysym" t)
      ("" "hyperref" nil)
      "\\tolerance=1000"
      ("authordate-trad,backend=biber,natbib" "biblatex-chicago" nil)
      "\\addbibresource{main.bib}"
      "\\addbibresource{ligon.bib}"
      "\\renewcommand{\\refname}{}"
      ("" "booktabs" nil))))
 #+END_SRC


** Make links export in LaTeX to \refs.
 #+begin_src emacs-lisp
 (setq org-latex-hyperref-format "\\ref{%s}")
 #+end_src

** Setup for Tables in LaTeX export
 #+BEGIN_SRC emacs-lisp :tangle yes
 (setq org-latex-default-figure-position "htbp")
 (setq org-latex-prefer-user-labels t)
 (setq org-latex-table-caption-above nil)
 (setq org-latex-tables-booktabs t)
 #+END_SRC

** Set up latex-to-pdf process for org using shell escape
 Calling latexmk also relies on $HOME/.latexmkrc.  This is important
 for passing options to pdflatex; at present mine looks like:
 #+BEGIN_example 
 $pdflatex = 'pdflatex --shell-escape -interaction=nonstopmode %O %S -file-line-error -synctex=1';
 #+END_example
 #+begin_src emacs-lisp :tangle yes
 ;;(setq org-latex-to-pdf-process '("LC_ALL=C PDFLATEX=\"pdflatex –shell-escape\" texi2dvi -p %f"))
 ;; (setq org-latex-to-pdf-process '("LC_ALL=C PDFLATEX=\"pdflatex –shell-escape\" latexmk -pdf -f %f"))
 (setq org-latex-pdf-process (list "latexmk -f -pdf %f"))
 #+end_src

** Use minted for listings
 #+begin_src emacs-lisp 
   (require 'ox-latex)
   (setq org-latex-listings 'minted)
   (add-to-list 'org-latex-packages-alist '("" "minted"))
   (setq org-latex-minted-options '(("fontsize" "\\footnotesize")
                                    ("frame" "lines")
                                    ("baselinestretch" "1")))
 #+end_src

** Allow :ignore: tag to ignore headlines
See https://emacs.stackexchange.com/questions/9492/is-it-possible-to-export-content-of-subtrees-without-their-headings
#+BEGIN_SRC emacs-lisp
(require 'ox-extra)
(ox-extras-activate '(ignore-headlines))
#+END_SRC

#+results:

** Async export
#+BEGIN_SRC emacs-lisp
(eval-after-load 'ox ;; shouldn't be byte compiled.
'(when (and user-init-file (buffer-file-name)) ;; don't do it in async
(setq org-export-async-init-file
(expand-file-name "init-org-async.el" (file-name-directory user-init-file)))))

(setq org-export-async-debug t)
#+END_SRC

